{"name":"Animal-game","tagline":"animal game for Tulane CMPS 1600","body":"animal game for Tulane CMPS 1600\r\n====\r\n\r\nAuthor: Steven Shea <stevenlsjr@gmail.com>\r\n\r\ncompiling instructions:\r\n----\r\n\r\nThe final project will be con\r\n\r\nthis project has no preexisting dependencies aside from a modern \r\nC/C++ compiler, git, and cmake. Git can fetch the googletest as\r\na submodule, which cmake will compile along with the project itself\r\n\r\nto build the project:\r\n```\r\n#clone project\r\ngit clone https://github.com/dangerbird2/animal-game.git animal-game\r\ncd animal-game\r\n\r\n# download submodules\r\ngit submodule init\r\ngit submodule update\r\n\r\n#create cmake build directory\r\nmkdir build && cd build\r\n\r\n#build with cmake\r\ncmake ..\r\nmake\r\n\r\n```\r\n\r\nto build documentation:\r\n```\r\ndoxygen ./doxyfile.in\r\n# open docs/html/index.html in browser\r\n```\r\n\r\nAnimal game algorithm pseudocode:\r\n---\r\n\r\n* Store node data as a struct with two fields -- a boolean field indicating whether the node\r\nrepresents a specific species or a descriptor(eg. does it quack, is it green, etc.). The second field is the node's name\r\n    * nodes that are species must be leaf nodes.\r\n* Begin by calling a `ask_user` routine on the head node\r\n* subroutine `ask_user(node)`:\r\n    * ask \"are you thinking of a [node description]?\"\r\n    * if node is a branch\r\n        * if user responds \"yes\", call ask_user on left node\r\n        * else, call `ask_user` on right node\r\n    * if node is a leaf\r\n        * if user responds \"yes\", end game\r\n        * else, call `expand_node` on node\r\n* subroutine `expand_node(node)`\r\n    * create a new descriptor node (descriptor can be chosen randomly from list)\r\n    * \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}